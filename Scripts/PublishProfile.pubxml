<?xml version="1.0" encoding="utf-8"?>
<!--
This file is used by the publish/package process of your Web project. You can customize the behavior of this process
by editing this MSBuild file. In order to learn more about this please visit https://go.microsoft.com/fwlink/?LinkID=208121. 
-->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<Import Project="Targets\MSBuild Community Tasks\MSBuild.Community.Tasks.Targets"/>
	<Import Project="Targets\MSBuild Extension Pack\MSBuild.ExtensionPack.tasks"/>
  
	  <PropertyGroup>
			<WebPublishMethod>FileSystem</WebPublishMethod>
			<PublishProvider>FileSystem</PublishProvider>
			<LaunchSiteAfterPublish>False</LaunchSiteAfterPublish>
			<ExcludeApp_Data>False</ExcludeApp_Data>
			<publishUrl>$(LocalFolder)\Publish\</publishUrl>
			<DeleteExistingFiles>True</DeleteExistingFiles>
			<ProjectSolution>$(LocalFolder)\SEBrowser.sln</ProjectSolution>
			<ProgramFiles64>$(ProgramW6432)</ProgramFiles64>
			<ProgramFiles64 Condition="'$(ProgramFiles64)' == ''">$(ProgramFiles)</ProgramFiles64>
			<NuGet Condition="'$(NuGet)' == ''">$(ProgramFiles64)\NuGet\nuget.exe</NuGet>
			<VersionFile Condition="'$(VersionFile)' == ''">$(LocalFolder)\Scripts\SEBrowser.version</VersionFile>
	  </PropertyGroup>
  
   <Target Name="BeforeVersionSource">
    <Message Text="SkipVersioning = --$(SkipVersioning)--"/>
    <ItemGroup>
      <!--List of files to be versioned.-->
      <FilesToVersion Include="$(LocalFolder)\**\AssemblyInfo.*">
        <VersionRegex>(?'BeforeVersion'AssemblyVersion\(%22)(?'CoreVersion'(\*|\d+)\.)+(\*|\d+)(?'AfterVersion'%22\))</VersionRegex>
        <VersionPrecision>4</VersionPrecision>
      </FilesToVersion>
    </ItemGroup>
	<CallTarget Targets="CoreVersionSource"/>
  </Target>
  
  <Target Name="CoreVersionSource">
    <!-- Update version number of the source code. -->
    <Message Text="Versioning source code..."/>
    <Version VersionFile="$(VersionFile)" MajorType="$(VersionMajorChange)" MinorType="$(VersionMinorChange)" BuildType="$(VersionBuildChange)" RevisionType="$(VersionRevisionChange)">
      <Output TaskParameter="Major" PropertyName="Major"/>
      <Output TaskParameter="Minor" PropertyName="Minor"/>
      <Output TaskParameter="Build" PropertyName="Build"/>
      <Output TaskParameter="Revision" PropertyName="Revision"/>
    </Version>
    <FileUpdate Files="%(FilesToVersion.FullPath)" Regex="%(FilesToVersion.VersionRegex)" ReplacementText="${BeforeVersion}$(Major).$(Minor)%(FilesToVersion.VersionTag)${AfterVersion}" Condition="'%(FilesToVersion.VersionPrecision)' &lt;= '2'"/>
    <FileUpdate Files="%(FilesToVersion.FullPath)" Regex="%(FilesToVersion.VersionRegex)" ReplacementText="${BeforeVersion}$(Major).$(Minor).$(Build)%(FilesToVersion.VersionTag)${AfterVersion}" Condition="'%(FilesToVersion.VersionPrecision)' == '3'"/>
    <FileUpdate Files="%(FilesToVersion.FullPath)" Regex="%(FilesToVersion.VersionRegex)" ReplacementText="${BeforeVersion}$(Major).$(Minor).$(Build).$(Revision)%(FilesToVersion.VersionTag)${AfterVersion}" Condition="'%(FilesToVersion.VersionPrecision)' == '4'"/>
   
  </Target>
  
  <Target Name="NugetRestore" BeforeTargets="BeforeBuild">
    <Message Text="Restoring Nuget Packages from $(LocalFolder)"/>
	<Exec Command="%22$(NuGet)%22 restore %22$(ProjectSolution)%22"/>
	<Message Text="Nuget Packages Restored"/>
	<CallTarget Targets="BeforeVersionSource"/>
  </Target>
  
</Project>