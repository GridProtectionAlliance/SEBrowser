@*//******************************************************************************************************
//  Index.cshtml - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  02/19/2020 - Billy Ernest
//       Generated original version of source code.
//
//*******************************************************************************************************@
@using GSF.Data
@using GSF.Web.Shared
@{
    Layout = "";

    try {
        using (AdoDataConnection connection = new AdoDataConnection("systemSettings"))
        {
            ViewBag.xdaInstance = connection.ExecuteScalar<string>("SELECT Value FROM [SEBrowser.Setting] WHERE Name = 'XDAInstance'");
            ViewBag.scInstance = connection.ExecuteScalar<string>("SELECT Value FROM [SEBrowser.Setting] WHERE Name = 'SCInstance'");
            ViewBag.openSEEInstance = connection.ExecuteScalar<string>("SELECT Value FROM [SEBrowser.Setting] WHERE Name = 'OpenSEEInstance'");
            ViewBag.faultLocationInstance = connection.ExecuteScalar<string>("SELECT Value FROM [SEBrowser.Setting] WHERE Name = 'FaultLocationInstance'");
        }
    }
    catch (Exception ex) {
        // Gracefully handle database issues
        ViewBag.xdaInstance = "localhost";
        ViewBag.scInstance = "localhost";
        ViewBag.openSEEInstance = "localhost";
        ViewBag.faultLocationInstance = "localhost";

        // TODO: Check for exception in ViewBag and display error message at an appropriate location along with warning such as:
        // Failed to connect to database or find 'SEBrowser.Setting' table, validate connection string
        ViewBag.settingsException = ex;
    }

    Version assemblyVersionInfo = typeof(SEBrowser.MvcApplication).Assembly.GetName().Version;
    string applicationVersion = assemblyVersionInfo.Major + "." + assemblyVersionInfo.Minor + "." + assemblyVersionInfo.Build;
}
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head id="Head1" runat="server">
    <title>SE Browser</title>

    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta charset="utf-8" />
    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />

    <link rel="shortcut icon" type="image/ico" href="~/Images/icon.png" />
    <link href="@Url.Content("~/@GSF/Web/Shared/Content/bootstrap4.css")" rel="stylesheet">
    <link href="@Url.Content("~/@GSF/Web/Shared/Content/font-awesome.css")" rel="stylesheet">

    <link href="~/Content/bootstrap4-datetimepicker.css" rel="stylesheet" />
    <style>
        body {
            font-size: x-small;
        }

        @@media screen and (min-width : 1920px) {
            body {
                font-size: small;
            }
        }

        @@media screen and (min-width : 2256px) {
            body {
                font-size: medium;
            }
        }

        @@media screen and (min-width : 2600px) {
            body {
                font-size: large;
            }
        }

        @@media screen and (min-width : 3000px) {
            body {
                font-size: x-large;
            }
        }
    </style>
</head>
<body>
    <div id="pageBody"></div>
    @*<p>
        @this.UserID() Is @(this.UserIsAuthenticated() ? "" : "Not") Authenticated
        <br />
        <br />
        Is Admin: @this.UserIsAdmin()
        <br />
        Is Admin or Editor: @this.UserIsAdminOrEditor()
        <br />
    </p>*@
    <script>
        var xdaInstance = '@Html.Raw(ViewBag.xdaInstance)';
        var scInstance = '@Html.Raw(ViewBag.scInstance)';
        var openSEEInstance = '@Html.Raw(ViewBag.openSEEInstance)';
        var faultLocationInstance = '@Html.Raw(ViewBag.faultLocationInstance)';
        var version = '@applicationVersion';
        var homePath = '@Html.Raw(Url.Content("~/"))';
        var controllerViewPath = homePath + '@Html.Raw(this.ViewContext.RouteData.GetRequiredString("controller"))/@Html.Raw(this.ViewContext.RouteData.GetRequiredString("action"))';
    </script>

    @if (Request.Browser.Browser == "InternetExplorer" || Request.Browser.Browser == "IE")
    {
        <script src="@Url.Content("~/@GSF/Web/Shared/Scripts/default.polyfill.min.js")"></script>
    }

    <script src="@Url.Content("~/@GSF/Web/Shared/Scripts/jquery.js")"></script>
    <script src="@Url.Content("~/@GSF/Web/Shared/Scripts/jquery-ui.js")"></script>
    <script src="@Url.Content("~/@GSF/Web/Shared/Scripts/moment.js")"></script>

    <script src="@Url.Content("~/@GSF/Web/Shared/Scripts/popper.js")"></script>
    <script src="@Url.Content("~/@GSF/Web/Shared/Scripts/bootstrap4.js")"></script>
    <script src="~/Scripts/Lib/bootstrap4-datetimepicker.min.js"></script>
    <script src="@Url.Content("~/Scripts/SEBrowser.js")"></script>
</body>
</html>